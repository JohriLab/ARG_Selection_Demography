//To run:
//slim -d d_scale=4 -d d_N=20000 -d d_burnin=15 -d d_nSamples=10 -d "d_repID='1'" -d "d_folder='slim_out'"

initialize() {
    defineGlobal("scale", d_scale);
    defineGlobal("N", asInteger(d_N));
    defineGlobal("burnin", asInteger(d_burnin));
    defineGlobal("nSamples", asInteger(d_nSamples));
    setSeed(1);
    initializeMutationRate(scale*1.25e-8);
    initializeMutationType("m1", 0.5, "f", 0.0);
    m1.mutationStackPolicy = "l";    
    initializeGenomicElementType("g1", m1, 1.0);
    initializeGenomicElement(g1, 0, 49999999);
    initializeRecombinationRate(scale*1e-8);
}
1 early() {
    sim.addSubpop("p1", asInteger(N/scale));
    community.rescheduleScriptBlock(s1, start=asInteger(burnin*N/scale), end=asInteger(burnin*N/scale));
}
s1 late(){
    p1.outputSample(nSamples);
    p1.outputVCFSample(sampleSize=nSamples, outputMultiallelics=F, filePath=d_folder + "/N" + nSamples + "_R" + d_repID + ".vcf", append=F, outputNonnucleotides=T);
    print("N at the end of simulation: " + p1.individualCount);
    print("The last base in the chromosome: " + sim.chromosome.lastPosition);
}
